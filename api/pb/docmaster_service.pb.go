// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: api/proto/docmaster_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Document represents an identity/verification document type
type Document struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                      // Unique document ID (e.g., "doc-abc123")
	Name                  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                  // Document name (e.g., "UK Passport")
	CountryCode           string                 `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`                                 // ISO 3166-1 alpha-2 country code (e.g., "GB")
	Region                string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`                                                              // Geographic region (e.g., "EU", "APAC")
	Category              string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`                                                          // Document category (e.g., "passport", "id_card", "drivers_license")
	ContainedAttributeIds []string               `protobuf:"bytes,6,rep,name=contained_attribute_ids,json=containedAttributeIds,proto3" json:"contained_attribute_ids,omitempty"` // List of attribute IDs this document contains
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_api_proto_docmaster_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_docmaster_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_api_proto_docmaster_service_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Document) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Document) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Document) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Document) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Document) GetContainedAttributeIds() []string {
	if x != nil {
		return x.ContainedAttributeIds
	}
	return nil
}

// AddDocumentRequest to create a new document type
type AddDocumentRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Name                  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CountryCode           string                 `protobuf:"bytes,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Region                string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Category              string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	ContainedAttributeIds []string               `protobuf:"bytes,5,rep,name=contained_attribute_ids,json=containedAttributeIds,proto3" json:"contained_attribute_ids,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AddDocumentRequest) Reset() {
	*x = AddDocumentRequest{}
	mi := &file_api_proto_docmaster_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentRequest) ProtoMessage() {}

func (x *AddDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_docmaster_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentRequest.ProtoReflect.Descriptor instead.
func (*AddDocumentRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_docmaster_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddDocumentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDocumentRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *AddDocumentRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddDocumentRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AddDocumentRequest) GetContainedAttributeIds() []string {
	if x != nil {
		return x.ContainedAttributeIds
	}
	return nil
}

// GetDocumentRequest to retrieve a specific document
type GetDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Document ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentRequest) Reset() {
	*x = GetDocumentRequest{}
	mi := &file_api_proto_docmaster_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentRequest) ProtoMessage() {}

func (x *GetDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_docmaster_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_docmaster_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ListDocumentsRequest with optional filters
type ListDocumentsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CountryCodeFilter string                 `protobuf:"bytes,1,opt,name=country_code_filter,json=countryCodeFilter,proto3" json:"country_code_filter,omitempty"` // Optional: filter by country code
	RegionFilter      string                 `protobuf:"bytes,2,opt,name=region_filter,json=regionFilter,proto3" json:"region_filter,omitempty"`                  // Optional: filter by region
	CategoryFilter    string                 `protobuf:"bytes,3,opt,name=category_filter,json=categoryFilter,proto3" json:"category_filter,omitempty"`            // Optional: filter by category
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListDocumentsRequest) Reset() {
	*x = ListDocumentsRequest{}
	mi := &file_api_proto_docmaster_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsRequest) ProtoMessage() {}

func (x *ListDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_docmaster_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsRequest.ProtoReflect.Descriptor instead.
func (*ListDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_docmaster_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListDocumentsRequest) GetCountryCodeFilter() string {
	if x != nil {
		return x.CountryCodeFilter
	}
	return ""
}

func (x *ListDocumentsRequest) GetRegionFilter() string {
	if x != nil {
		return x.RegionFilter
	}
	return ""
}

func (x *ListDocumentsRequest) GetCategoryFilter() string {
	if x != nil {
		return x.CategoryFilter
	}
	return ""
}

// ListDocumentsResponse contains matching documents
type ListDocumentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*Document            `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Total number of documents (for pagination)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsResponse) Reset() {
	*x = ListDocumentsResponse{}
	mi := &file_api_proto_docmaster_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsResponse) ProtoMessage() {}

func (x *ListDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_docmaster_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsResponse.ProtoReflect.Descriptor instead.
func (*ListDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_docmaster_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListDocumentsResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *ListDocumentsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// FindDocumentsByAttributeRequest to find documents containing an attribute
type FindDocumentsByAttributeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttributeId   string                 `protobuf:"bytes,1,opt,name=attribute_id,json=attributeId,proto3" json:"attribute_id,omitempty"` // Attribute ID to search for
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindDocumentsByAttributeRequest) Reset() {
	*x = FindDocumentsByAttributeRequest{}
	mi := &file_api_proto_docmaster_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindDocumentsByAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDocumentsByAttributeRequest) ProtoMessage() {}

func (x *FindDocumentsByAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_docmaster_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDocumentsByAttributeRequest.ProtoReflect.Descriptor instead.
func (*FindDocumentsByAttributeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_docmaster_service_proto_rawDescGZIP(), []int{5}
}

func (x *FindDocumentsByAttributeRequest) GetAttributeId() string {
	if x != nil {
		return x.AttributeId
	}
	return ""
}

// FindDocumentsByAttributeResponse contains matching documents
type FindDocumentsByAttributeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*Document            `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindDocumentsByAttributeResponse) Reset() {
	*x = FindDocumentsByAttributeResponse{}
	mi := &file_api_proto_docmaster_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindDocumentsByAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDocumentsByAttributeResponse) ProtoMessage() {}

func (x *FindDocumentsByAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_docmaster_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDocumentsByAttributeResponse.ProtoReflect.Descriptor instead.
func (*FindDocumentsByAttributeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_docmaster_service_proto_rawDescGZIP(), []int{6}
}

func (x *FindDocumentsByAttributeResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *FindDocumentsByAttributeResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_api_proto_docmaster_service_proto protoreflect.FileDescriptor

const file_api_proto_docmaster_service_proto_rawDesc = "" +
	"\n" +
	"!api/proto/docmaster_service.proto\x12\rkyc.docmaster\"\xbd\x01\n" +
	"\bDocument\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x126\n" +
	"\x17contained_attribute_ids\x18\x06 \x03(\tR\x15containedAttributeIds\"\xb7\x01\n" +
	"\x12AddDocumentRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fcountry_code\x18\x02 \x01(\tR\vcountryCode\x12\x16\n" +
	"\x06region\x18\x03 \x01(\tR\x06region\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x126\n" +
	"\x17contained_attribute_ids\x18\x05 \x03(\tR\x15containedAttributeIds\"$\n" +
	"\x12GetDocumentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x94\x01\n" +
	"\x14ListDocumentsRequest\x12.\n" +
	"\x13country_code_filter\x18\x01 \x01(\tR\x11countryCodeFilter\x12#\n" +
	"\rregion_filter\x18\x02 \x01(\tR\fregionFilter\x12'\n" +
	"\x0fcategory_filter\x18\x03 \x01(\tR\x0ecategoryFilter\"o\n" +
	"\x15ListDocumentsResponse\x125\n" +
	"\tdocuments\x18\x01 \x03(\v2\x17.kyc.docmaster.DocumentR\tdocuments\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"D\n" +
	"\x1fFindDocumentsByAttributeRequest\x12!\n" +
	"\fattribute_id\x18\x01 \x01(\tR\vattributeId\"z\n" +
	" FindDocumentsByAttributeResponse\x125\n" +
	"\tdocuments\x18\x01 \x03(\v2\x17.kyc.docmaster.DocumentR\tdocuments\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount2\x81\x03\n" +
	"\x10DocMasterService\x12I\n" +
	"\vAddDocument\x12!.kyc.docmaster.AddDocumentRequest\x1a\x17.kyc.docmaster.Document\x12I\n" +
	"\vGetDocument\x12!.kyc.docmaster.GetDocumentRequest\x1a\x17.kyc.docmaster.Document\x12Z\n" +
	"\rListDocuments\x12#.kyc.docmaster.ListDocumentsRequest\x1a$.kyc.docmaster.ListDocumentsResponse\x12{\n" +
	"\x18FindDocumentsByAttribute\x12..kyc.docmaster.FindDocumentsByAttributeRequest\x1a/.kyc.docmaster.FindDocumentsByAttributeResponseB(Z&github.com/adamtc007/KYC-DSL/api/pb;pbb\x06proto3"

var (
	file_api_proto_docmaster_service_proto_rawDescOnce sync.Once
	file_api_proto_docmaster_service_proto_rawDescData []byte
)

func file_api_proto_docmaster_service_proto_rawDescGZIP() []byte {
	file_api_proto_docmaster_service_proto_rawDescOnce.Do(func() {
		file_api_proto_docmaster_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_docmaster_service_proto_rawDesc), len(file_api_proto_docmaster_service_proto_rawDesc)))
	})
	return file_api_proto_docmaster_service_proto_rawDescData
}

var file_api_proto_docmaster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_proto_docmaster_service_proto_goTypes = []any{
	(*Document)(nil),                         // 0: kyc.docmaster.Document
	(*AddDocumentRequest)(nil),               // 1: kyc.docmaster.AddDocumentRequest
	(*GetDocumentRequest)(nil),               // 2: kyc.docmaster.GetDocumentRequest
	(*ListDocumentsRequest)(nil),             // 3: kyc.docmaster.ListDocumentsRequest
	(*ListDocumentsResponse)(nil),            // 4: kyc.docmaster.ListDocumentsResponse
	(*FindDocumentsByAttributeRequest)(nil),  // 5: kyc.docmaster.FindDocumentsByAttributeRequest
	(*FindDocumentsByAttributeResponse)(nil), // 6: kyc.docmaster.FindDocumentsByAttributeResponse
}
var file_api_proto_docmaster_service_proto_depIdxs = []int32{
	0, // 0: kyc.docmaster.ListDocumentsResponse.documents:type_name -> kyc.docmaster.Document
	0, // 1: kyc.docmaster.FindDocumentsByAttributeResponse.documents:type_name -> kyc.docmaster.Document
	1, // 2: kyc.docmaster.DocMasterService.AddDocument:input_type -> kyc.docmaster.AddDocumentRequest
	2, // 3: kyc.docmaster.DocMasterService.GetDocument:input_type -> kyc.docmaster.GetDocumentRequest
	3, // 4: kyc.docmaster.DocMasterService.ListDocuments:input_type -> kyc.docmaster.ListDocumentsRequest
	5, // 5: kyc.docmaster.DocMasterService.FindDocumentsByAttribute:input_type -> kyc.docmaster.FindDocumentsByAttributeRequest
	0, // 6: kyc.docmaster.DocMasterService.AddDocument:output_type -> kyc.docmaster.Document
	0, // 7: kyc.docmaster.DocMasterService.GetDocument:output_type -> kyc.docmaster.Document
	4, // 8: kyc.docmaster.DocMasterService.ListDocuments:output_type -> kyc.docmaster.ListDocumentsResponse
	6, // 9: kyc.docmaster.DocMasterService.FindDocumentsByAttribute:output_type -> kyc.docmaster.FindDocumentsByAttributeResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_docmaster_service_proto_init() }
func file_api_proto_docmaster_service_proto_init() {
	if File_api_proto_docmaster_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_docmaster_service_proto_rawDesc), len(file_api_proto_docmaster_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_docmaster_service_proto_goTypes,
		DependencyIndexes: file_api_proto_docmaster_service_proto_depIdxs,
		MessageInfos:      file_api_proto_docmaster_service_proto_msgTypes,
	}.Build()
	File_api_proto_docmaster_service_proto = out.File
	file_api_proto_docmaster_service_proto_goTypes = nil
	file_api_proto_docmaster_service_proto_depIdxs = nil
}
